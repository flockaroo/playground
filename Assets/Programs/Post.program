// =================================================================================================
$type(vertex-shader)
$include(Common.inc)
// =================================================================================================

uniform mat4 ModelToWorldMatrix;
uniform mat4 ModelToViewMatrix;
uniform mat4 ProjectionMatrix;

uniform vec4 RenderParams;

in vec3 Position;
in vec3 Normal;
in vec3 Color;

out vec4 renderParams;
out vec3 texCoord;

void main()
{
    renderParams = RenderParams;
    texCoord = Color;
    gl_Position = ProjectionMatrix * ModelToViewMatrix * vec4(Position, 1.0);
}

// =================================================================================================
$type(fragment-shader)
$include(Common.inc)
// =================================================================================================

uniform sampler2D ColorTex;
uniform sampler2D DepthTex;

in vec4 renderParams;
in vec3 texCoord;

out vec4 fragmentColor;

void main()
{
    //fragmentColor = vec4(texCoord, 1.0);
    //fragmentColor = vec4(texture(ColorTex, texCoord.xy).rgb, 1.0);

    fragmentColor = vec4(texture(ColorTex, texCoord.xy).rgb * vec3(1.0, 0.7, 0.7), 1.0);

    /*
    vec3 smoothed = vec3(0.0, 0.0, 0.0);
    vec2 its = 1.0 / textureSize(ColorTex, 0);

    smoothed += texture(ColorTex, texCoord.xy + its * vec2(-3.0, -3.0f)).rgb;
    smoothed += texture(ColorTex, texCoord.xy + its * vec2( 0.0, -3.0f)).rgb;
    smoothed += texture(ColorTex, texCoord.xy + its * vec2(+3.0, -3.0f)).rgb;

    smoothed += texture(ColorTex, texCoord.xy + its * vec2(-3.0,  0.0f)).rgb;
    smoothed += texture(ColorTex, texCoord.xy + its * vec2( 0.0,  0.0f)).rgb;
    smoothed += texture(ColorTex, texCoord.xy + its * vec2(+3.0,  0.0f)).rgb;

    smoothed += texture(ColorTex, texCoord.xy + its * vec2(-3.0, +3.0f)).rgb;
    smoothed += texture(ColorTex, texCoord.xy + its * vec2( 0.0, +3.0f)).rgb;
    smoothed += texture(ColorTex, texCoord.xy + its * vec2(+3.0, +3.0f)).rgb;

    fragmentColor = vec4(smoothed / 9.0, 1.0);
    */

    /*
    float z = texture(DepthTex, texCoord.xy).x;
    z = (0.5 * z) / (100.0 - z * (100.0 - 0.5));
    z = 1.0 - z;
    fragmentColor = vec4(z, z, z, 1.0);
    */
}
